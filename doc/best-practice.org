#+STARTUP: indent
* Meta
In Common Lisp, there're too many libraries for doing one thing, and sometimes it's hard to choose a library for happy hacking. This document aims to provide an advice list for Eloquent-MVC developers to select functions, libraries or even frameworks(What? A framework used in another framework? Are you kidding me?) when they need. This document is in progress and it's not ready for any projects.
* Layout
** Function
The code layout of a function should be as followed:
- Docstring :: The first part in the body of a DEFUN form
- CHECK-TYPE forms :: Use the CL:CHECK-TYPE to verify the type of parameters
- Validation and SETF forms :: Validate the parameters, signaled conditions if neccessary. Use the SETF to modify the parameters' values to proper types if neccessary
- Business logics :: Do the business logics
* Libs
- JSON decoding/encoding :: cl-json
- Pattern matching :: optima
- Regular Expression :: cl-ppcre
- Time manipulation :: local-time
* Operations
** alist
*** search by string key
Use the function ELOQUENT.MVC.PRELUDE:STRING-ASSOC. In most cases, the return value of CL:ASSOC will be passed to a CDR for retriving the "value" part.
** I/O
*** read a file
Use the function ELOQUENT.MVC.PRELUDE:READ-FILE-STRING. This function is a thin wrapper of function READ-FILE-STRING from package UIOP.
** string
*** convert to keyword symbol
Use the function ELOQUENT.MVC.PRELUDE:MAKE-KEYWORD. It will turn the source string into upper case before interning it into package :KEYWORD.
*** split it
Use the generic function ELOQUENT.MVC.PRELUDE:SPLIT
